{"version":3,"sources":["components/Clock.js","components/Header.js","components/AddTask.js","components/Task.js","components/ToDoTasksList.js","components/ComplTasksList.js","components/Footer.js","ToDoList.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Clock","state","time","_this","getTime","currentTime","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","this","setState","_this2","interval","setInterval","setTime","clearInterval","_this$state$time","react_default","a","createElement","Fragment","className","concat","Component","Header","props","components_Clock","name","surname","class","style","clear","AddTask","minDate","toISOString","slice","text","checked","date","handleText","e","target","value","handleCheckbox","handleDate","handleAddClick","_this$state","addTask","handleClearClick","maxDate","type","placeholder","onChange","htmlFor","min","max","onClick","id","Task","_props$task","task","active","priority","finishDate","color","change","delete","finish","toLocaleString","back","ToDoTasksList","tasks","filter","length","sort","b","done","lastDone","find","activeTasks","map","components_Task","key","deleteTask","changeTaskStatus","lastDoneTask","ComplTasksList","doneTasks","Footer","href","ToDoList","counter","developerName","prevState","Object","toConsumableArray","changeTasksList","forEach","restoreTask","fetch","then","response","json","result","_this3","console","log","react_router_dom","components_Header","components_AddTask","to","activeClassName","react_router","path","component","components_ToDoTasksList","components_ComplTasksList","components_Footer","Login","handleForSubmit","add","handleNameInput","handleSurnameInput","onSubmit","App","login","addUser","src_Login_0","src_ToDoList_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3f15a46.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles/Clock.css'\r\n\r\nclass Clock extends Component {\r\n  state = {\r\n    time: this.getTime()\r\n  }\r\n\r\n  getTime() {\r\n    const currentTime = new Date();\r\n    return ({\r\n      hours: currentTime.getHours(),\r\n      minutes: currentTime.getMinutes(),\r\n      seconds: currentTime.getSeconds(),\r\n    }\r\n    )\r\n  }\r\n\r\n  setTime() {\r\n    const time = this.getTime()\r\n    this.setState({ time })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.setTime(), 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  render() {\r\n    const { hours, minutes, seconds } = this.state.time\r\n    return (\r\n      <>\r\n        <div className='Clock'>\r\n          <h3>{hours > 9 ? hours : `0${hours}`} : {minutes > 9 ? minutes : `0${minutes}`} : {seconds > 9 ? seconds : `0${seconds}`}</h3>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;","import './styles/Header.css';\r\nimport React from 'react';\r\nimport Clock from './Clock';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <div className='Header'>\r\n        <Clock />\r\n        <div className=\"centerHeader\">\r\n          <h1> To-Do-List </h1>\r\n          <h5>(For {props.name} {props.surname})</h5>\r\n        </div >\r\n        <div className=\"rightHeader\">\r\n          <button><i className=\"ccw\" class=\"icon-ccw\"></i></button>\r\n        </div>\r\n        <div style={{ clear: \"both\" }} > </div>\r\n      </div>\r\n      <div style={{ clear: \"both\" }} > </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import './styles/AddTask.css';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddTask extends Component {\r\n\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n  state = {\r\n    text: '',\r\n    checked: false,\r\n    date: this.minDate\r\n  }\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value\r\n    })\r\n  }\r\n\r\n  handleAddClick = () => {\r\n    const { text, checked, date } = this.state;\r\n    this.props.addTask(text, date, checked)\r\n    this.setState({\r\n      text: '',\r\n      checked: false,\r\n      date: this.minDate\r\n    })\r\n  }\r\n\r\n  handleClearClick = () => {\r\n    this.setState({\r\n      text: '',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n\r\n    return (\r\n      <>\r\n        <div className=\"AddTask\">\r\n          <div className=\"AddTaskLeft\">\r\n            <input className=\"content\" type=\"text\" placeholder=\"Add new task...\" value={this.state.text} onChange={this.handleText} />\r\n            <label className=\"date-label\" htmlFor=\"date\">DEADLINE:</label>\r\n            <input className=\"date\" type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n            <div style={{ clear: \"both\" }} > </div>\r\n          </div>\r\n          <div className=\"AddTaskRight\">\r\n            <button className=\"add\" onClick={this.handleAddClick}><i class=\"icon-plus\"></i></button>\r\n            <button className=\"clear\" onClick={this.handleClearClick}>Clear</button>\r\n            <div style={{ clear: \"both\" }} > </div>\r\n            <input className=\"checkbox\" type=\"checkbox\" id=\"important\" checked={this.state.checked} onChange={this.handleCheckbox} />\r\n            <label className=\"checkbox-label\" htmlFor=\"important\">PRIORITY</label>\r\n            <div style={{ clear: \"both\" }} > </div>\r\n          </div>\r\n          <div style={{ clear: \"both\" }} > </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport './styles/Task.css';\r\n\r\nconst Task = (props) => {\r\n\r\n  const style = {\r\n    color: 'red',\r\n  }\r\n\r\n  const { text, date, id, active, priority, finishDate } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <>\r\n        <div className='toDoTask'>\r\n          <div className='content'>\r\n            <h4 style={priority ? style : null}>{text}</h4>\r\n          </div>\r\n          <div className='deadline'>\r\n            <h4> {date} </h4>\r\n          </div>\r\n          <button onClick={() => props.change(id)}><i class=\"icon-ok\"></i></button>\r\n          <button onClick={() => props.delete(id)}><i class=\"icon-trash\"></i></button>\r\n          <div style={{ clear: \"both\" }} > </div>\r\n        </div>\r\n        <div style={{ clear: \"both\" }} > </div>\r\n      </>\r\n    );\r\n  } else {\r\n\r\n    const finish = new Date(finishDate).toLocaleString()\r\n\r\n    return (\r\n      <>\r\n        <div className='completedTask'>\r\n          <div className='content'><h4>{text}</h4> <p>- confirmation of performance {finish}</p> </div>\r\n          <div className='deadline'><h4>{date}</h4></div>\r\n          <button onClick={() => props.back(id)}><i class=\"icon-ccw\"></i></button>\r\n          <button onClick={() => props.delete(id)}><i class=\"icon-trash\"></i></button>\r\n          <div style={{ clear: \"both\" }} > </div>\r\n        </div>\r\n        <div style={{ clear: \"both\" }} > </div>\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport './styles/ToDoTasksList.css';\r\nimport Task from './Task'\r\n\r\nconst ToDoTasksList = (props) => {\r\n\r\n  const active = props.tasks.filter(task => task.active);\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((b, a) => {\r\n      if (a.date < b.date) {\r\n        return 1\r\n      }\r\n      if (a.date > b.date) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const done = props.tasks.filter(task => !task.active);\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const lastDone = done.find(task => !task.active);\r\n\r\n  const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.deleteTask} change={props.changeTaskStatus} />)\r\n  const lastDoneTask = lastDone ? <Task key={lastDone.id} task={lastDone} delete={props.deleteTask} change={props.changeTaskStatus} back={props.back} /> : <p className=\"nothing\">You have done nothing</p>\r\n\r\n  return (\r\n    <>\r\n      <div style={{ clear: \"both\" }} > </div>\r\n      <div className='ToDoTasksList'>\r\n        {activeTasks}\r\n      </div>\r\n      <h3 className=\"lST\">Last Done Task</h3>\r\n      <div className='lastDoneTask'>\r\n        {lastDoneTask}\r\n        <div style={{ clear: \"both\" }} > </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoTasksList;\r\n\r\n","import React from 'react';\r\nimport './styles/ComplTasksList.css';\r\nimport Task from './Task';\r\n\r\nconst ComplTasksList = (props) => {\r\n\r\n  const done = props.tasks.filter(task => !task.active);\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.deleteTask} change={props.change} back={props.back} />)\r\n\r\n  return (\r\n    <>\r\n      <div style={{ clear: \"both\" }} > </div>\r\n      <div className='ComplTasksList'>\r\n        {doneTasks}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComplTasksList;","import React from 'react';\r\nimport './styles/Footer.css';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <>\r\n      <div className='Footer'>\r\n        <p>Made with <i class=\"icon-heart\"></i> by {props.name} Cybulski <a className=\"anchor\" href=\"https://www.facebook.com/kamil.cybulski.9\"><i class=\"icon-facebook-rect\"></i></a></p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './ToDoList.css';\r\nimport Header from './components/Header';\r\nimport AddTask from './components/AddTask';\r\nimport ToDoTasksList from './components/ToDoTasksList';\r\nimport ComplTasksList from './components/ComplTasksList';\r\nimport Footer from './components/Footer';\r\nimport { BrowserRouter as Router, NavLink, Route, Switch } from 'react-router-dom';\r\n\r\nclass ToDoList extends Component {\r\n  counter = 2\r\n  state = {\r\n    developerName: '',\r\n    tasks: [\r\n      { id: 0, text: 'Nauczyć się React.JS', date: '2019-08-07', priority: true, active: true, finishDate: null },\r\n      { id: 1, text: 'Nauczyć się TypeScript', date: '2019-11-12', priority: false, active: true, finishDate: null },\r\n    ]\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"data.json\")\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({\r\n          developerName: result.name\r\n        })\r\n      })\r\n  }\r\n\r\n  addTask = (text, date, priority) => {\r\n    const task = {\r\n      id: this.counter,\r\n      text,\r\n      date,\r\n      priority,\r\n      active: true,\r\n      finishDate: null\r\n    }\r\n    this.counter++\r\n\r\n    this.setState(prevState => ({\r\n      tasks: [...prevState.tasks, task]\r\n    }))\r\n  }\r\n\r\n  changeTasksList = (changeTasksList) => {\r\n    this.setState({\r\n      changeTasksList\r\n    })\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    let tasks = [...this.state.tasks];\r\n    tasks = tasks.filter(task => task.id !== id)\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n\r\n  changeTaskStatus = (id) => {\r\n    const tasks = this.state.tasks.slice()\r\n    tasks.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime()\r\n      }\r\n    })\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n\r\n  restoreTask = (id) => {\r\n    const tasks = this.state.tasks.slice()\r\n    tasks.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = true;\r\n        task.finishDate = null;\r\n      }\r\n    })\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.developerName);\r\n    return (\r\n      <Router>\r\n        <div className=\"App\" >\r\n          <header>\r\n            {<Header name={this.props.name} surname={this.props.surname} />}\r\n          </header>\r\n          <main>\r\n            <section>\r\n              {<AddTask addTask={this.addTask} />}\r\n            </section>\r\n            <section>\r\n              <nav className=\"Nav\">\r\n                <NavLink to=\"/to-do\" activeClassName=\"news_selected\" className=\"ToDoTasksButton\">To-Do-Tasks</NavLink>\r\n                <NavLink to=\"/completed\" activeClassName=\"news_selected\" className=\"CompletedTasksButton\">Completed-Tasks</NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route path=\"/to-do\" component={() => <ToDoTasksList tasks={this.state.tasks} deleteTask={this.deleteTask} changeTaskStatus={this.changeTaskStatus} back={this.restoreTask} />} />\r\n                <Route path=\"/completed\" component={() => <ComplTasksList tasks={this.state.tasks} deleteTask={this.deleteTask} back={this.restoreTask} />} />\r\n                <Route component={() => <ToDoTasksList tasks={this.state.tasks} deleteTask={this.deleteTask} changeTaskStatus={this.changeTaskStatus} back={this.restoreTask} />} />\r\n              </Switch>\r\n            </section>\r\n          </main>\r\n          <footer>\r\n            {<Footer name={this.state.developerName} />}\r\n          </footer>\r\n        </div >\r\n      </Router >\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n    name: \"\",\r\n    surname: \"\"\r\n  }\r\n\r\n  handleForSubmit = () => {\r\n    const { name, surname } = this.state;\r\n    this.props.add(name, surname)\r\n    this.setState({\r\n      name: \"\",\r\n      surname: \"\",\r\n    })\r\n  }\r\n\r\n  handleNameInput = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSurnameInput = (e) => {\r\n    this.setState({\r\n      surname: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"Login\">\r\n          <form onSubmit={this.handleForSubmit}>\r\n            <input type=\"text\" placeholder=\"Add your name...\" value={this.state.name} onChange={this.handleNameInput}></input>\r\n            <input type=\"text\" placeholder=\"Add your surname...\" value={this.state.surname} onChange={this.handleSurnameInput}></input>\r\n            <button type=\"submit\">START</button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport ToDoList from './ToDoList';\r\nimport Login from './Login';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        login: true,\r\n        name: \"\",\r\n        surname: \"\"\r\n    }\r\n\r\n    addUser = (name, surname) => {\r\n        this.setState({\r\n            login: false,\r\n            name,\r\n            surname\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { login, name, surname } = this.state;\r\n        return (\r\n            login ? <Login add={this.addUser} /> : <ToDoList name={name} surname={surname} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}